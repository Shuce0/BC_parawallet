export type AuthType = 'email' | 'phone' | 'farcaster' | 'telegram' | 'userId';
export type $ExtractAuth<T extends AuthType> = {
    auth: Auth<T>;
    authType: T;
    identifier: string;
    publicKeyIdentifier: string;
};
export type ExtractAuth = $ExtractAuth<'email'> | $ExtractAuth<'phone'> | $ExtractAuth<'farcaster'> | $ExtractAuth<'telegram'> | $ExtractAuth<'userId'>;
export type AuthParams = Record<string, any> & {
    email?: string;
    phone?: string;
    countryCode?: string;
    farcasterUsername?: string;
    telegramUserId?: string;
    userId?: string;
};
export type Auth<T extends AuthType = AuthType> = T extends 'email' ? {
    email: string;
} : T extends 'phone' ? {
    phone: string;
    countryCode: string;
} : T extends 'farcaster' ? {
    farcasterUsername: string;
} : T extends 'telegram' ? {
    telegramUserId: string;
} : {
    userId: string;
};
export declare enum EncryptorType {
    USER = "USER",
    RECOVERY = "RECOVERY",
    BIOMETRICS = "BIOMETRICS",
    PASSWORD = "PASSWORD"
}
export declare enum KeyShareType {
    USER = "USER",
    RECOVERY = "RECOVERY"
}
export declare enum PasswordStatus {
    PENDING = "PENDING",
    COMPLETE = "COMPLETE"
}
export declare enum PublicKeyStatus {
    PENDING = "PENDING",
    COMPLETE = "COMPLETE"
}
export declare enum PublicKeyType {
    MOBILE = "MOBILE",
    WEB = "WEB"
}
export interface EncryptedKeyShare {
    encryptedShare: string;
    encryptedKey?: string;
    type: KeyShareType;
    biometricPublicKey?: string;
    encryptor: EncryptorType;
    recoveryPublicKeyId?: string;
    partnerId?: string;
    protocolId?: string;
}
export declare enum OAuthMethod {
    GOOGLE = "GOOGLE",
    TWITTER = "TWITTER",
    APPLE = "APPLE",
    DISCORD = "DISCORD",
    FACEBOOK = "FACEBOOK",
    FARCASTER = "FARCASTER",
    TELEGRAM = "TELEGRAM"
}
export declare enum AuthMethod {
    PASSWORD = "PASSWORD",
    PASSKEY = "PASSKEY"
}
export type BiometricLocationHint = {
    useragent?: string;
    aaguid?: string;
};
export type TelegramAuthResponse = {
    auth_date: number;
    first_name?: string;
    hash: string;
    id: number;
    last_name?: string;
    photo_url?: string;
    username?: string;
};
