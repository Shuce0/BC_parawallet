import{a as h}from"./chunk-NEJSZOZX.js";import O from"axios";import{getPortalBaseURL as $,initClient as _,mpcComputationClient as F,paraVersion as V,WalletType as A}from"@getpara/core-sdk";import{getBaseMPCNetworkUrl as f,WalletScheme as S,WalletType as p}from"@getpara/core-sdk";var b=(e,a,i)=>`{"ServerUrl":"${e}", "WalletId": "${a}", "Id":"${i}", "Ids":["USER","CAPSULE"], "Threshold":1}`,y=(e,a,i)=>`{"walletId": "${e}", "id":"${a}", "otherId":"CAPSULE", "isReceiver": false, "disableWebSockets": ${i}}`;async function P(e,a,i,r){let{data:n}=await e.mpcComputationClient.post("/wallets",{userId:a,walletId:i,protocolId:r});return n}async function N(e,a,i,r,n,t){let{data:s}=await e.mpcComputationClient.post(`/wallets/${i}/messages/sign`,{userId:a,protocolId:r,message:n,signer:t});return s}async function I(e,a,i,r,n,t,s){let{data:o}=await e.mpcComputationClient.post(`/wallets/${i}/transactions/send`,{userId:a,protocolId:r,transaction:n,signer:t,chainId:s});return o}async function T(e,a){let{walletId:i,protocolId:r}=await e.client.createWallet(a,{scheme:S.ED25519,type:p.SOLANA}),n=f(e.env,!e.disableWebSockets);return{signer:await new Promise((s,o)=>global.ed25519CreateAccount(n,i,r,(l,g)=>{l&&o(l),s(g)})),walletId:i}}async function U(e,a,i){let{walletId:r,protocolId:n}=await e.client.createPregenWallet({pregenIdentifier:a,pregenIdentifierType:i,scheme:S.ED25519,type:p.SOLANA}),t=f(e.env,!e.disableWebSockets);return{signer:await new Promise((o,l)=>global.ed25519CreateAccount(t,r,n,(g,c)=>{g&&l(g),o(c)})),walletId:r}}async function E(e,a,i,r,n){let{protocolId:t}=await e.client.preSignMessage(i,r,n,S.ED25519);return{signature:await new Promise((o,l)=>global.ed25519Sign(a,t,n,(g,c)=>{g&&l(g),o(c)}))}}async function K(e,a,i,r){let{walletId:n,protocolId:t}=await e.client.createWallet(a,{useTwoSigners:!0,scheme:e.useDKLS?S.DKLS:S.CGGMP,type:i,cosmosPrefix:i===p.COSMOS?e.cosmosPrefix:void 0});if(e.offloadMPCComputationURL&&!e.useDKLS)return{signer:(await P(e,a,n,t)).signer,walletId:n};let s=f(e.env,!e.disableWebSockets),o=e.useDKLS?y(n,"USER",e.disableWebSockets):b(s,n,"USER"),l=e.useDKLS?global.dklsCreateAccount:global.createAccountV2;return{signer:await new Promise((c,u)=>l(o,s,t,r,()=>{},(d,w)=>{d&&u(d),c(w)})),walletId:n}}async function L(e,a,i,r,n,t){let{walletId:s,protocolId:o}=await e.client.createPregenWallet({pregenIdentifier:i,pregenIdentifierType:r,type:n,cosmosPrefix:n===p.COSMOS?e.cosmosPrefix:void 0});if(e.offloadMPCComputationURL&&!e.useDKLS)return{signer:(await P(e,a,s,o)).signer,walletId:s};let l=f(e.env,!e.disableWebSockets),g=e.useDKLS?y(s,"USER",e.disableWebSockets):b(l,s,"USER"),c=e.useDKLS?global.dklsCreateAccount:global.createAccountV2;return{signer:await new Promise((d,w)=>c(g,l,o,t,()=>{},(C,D)=>{C&&w(C),d(D)})),walletId:s}}async function k(e,a,i,r,n){let{protocolId:t,pendingTransactionId:s}=await e.client.preSignMessage(r,i,n);if(s)return{pendingTransactionId:s};if(e.offloadMPCComputationURL&&!e.useDKLS)return N(e,r,i,t,n,a);let o=f(e.env,!e.disableWebSockets),l=e.useDKLS?global.dklsSignMessage:global.signMessage;return new Promise((g,c)=>l(a,o,n,t,(u,d)=>{u&&c(u),g({signature:d})}))}async function R(e,a,i,r,n,t){let{data:{protocolId:s,pendingTransactionId:o}}=await e.client.signTransaction(r,i,{transaction:n,chainId:t});if(o)return{pendingTransactionId:o};if(e.offloadMPCComputationURL&&!e.useDKLS)return I(e,r,i,s,n,a,t);let l=f(e.env,!e.disableWebSockets),g=e.useDKLS?global.dklsSendTransaction:global.sendTransaction;return new Promise((c,u)=>g(a,l,n,t,s,(d,w)=>{d&&u(d),c({signature:w})}))}async function W(e,a,i,r,n,t){let{data:{protocolId:s,pendingTransactionId:o}}=await e.client.sendTransaction(r,i,{transaction:n,chainId:t});if(o)return{pendingTransactionId:o};if(e.offloadMPCComputationURL&&!e.useDKLS)return I(e,r,i,s,n,a,t);let l=f(e.env,!e.disableWebSockets),g=e.useDKLS?global.dklsSendTransaction:global.sendTransaction;return new Promise((c,u)=>g(a,l,n,t,s,(d,w)=>{d&&u(d),c({signature:w})}))}async function M(e,a,i,r){let{data:{protocolId:n}}=await e.client.refreshKeys(r,i),t=f(e.env,!e.disableWebSockets),s=e.useDKLS?global.dklsRefresh:global.refresh;return new Promise((o,l)=>s(a,t,n,(g,c)=>{g&&l(g),o(c)}))}async function v(e,a,i,r){let n=await e.client.getParaShare(r,i);return n?new Promise((t,s)=>global.getPrivateKey(a,n,(o,l)=>{o&&s(o),t(l)})):(console.error("unable to retrieve Para share"),"")}var m;async function q(e,a=3){for(let i=0;i<a;i++)try{return await O.get(`${$(e,!0,!0)}/static/js/main.wasm`,{responseType:"arraybuffer"})}catch(r){if(i===a-1)throw r}}async function B(e){await import("./wasm_exec-TBSO5IWG.js"),global.WebSocket=h("ws");let a=new global.Go;m||(m=(await q(e)).data);let i=new Uint8Array(m),r=await WebAssembly.instantiate(i,a.importObject);a.run(r.instance)}async function Y(e,a){let{functionType:i,params:r}=a;switch(i){case"KEYGEN":{let{userId:n,secretKey:t,type:s=A.EVM}=r;return K(e,n,s,t)}case"SIGN_TRANSACTION":{let{share:n,walletId:t,userId:s,tx:o,chainId:l}=r;return R(e,n,t,s,o,l)}case"SEND_TRANSACTION":{let{share:n,walletId:t,userId:s,tx:o,chainId:l}=r;return W(e,n,t,s,o,l)}case"SIGN_MESSAGE":{let{share:n,walletId:t,userId:s,message:o}=r;return k(e,n,t,s,o)}case"REFRESH":{let{share:n,walletId:t,userId:s}=r;return M(e,n,t,s)}case"PREKEYGEN":{let{email:n,partnerId:t,secretKey:s,type:o=A.EVM}=r,{pregenIdentifier:l,pregenIdentifierType:g}=r;return n!=="null"&&n!=="undefined"&&n!==""&&n!=null&&(l=n,g="EMAIL"),await L(e,t,l,g,o,s)}case"GET_PRIVATE_KEY":{let{share:n,walletId:t,userId:s}=r;return await v(e,n,t,s)}case"ED25519_KEYGEN":{let{userId:n}=r;return T(e,n)}case"ED25519_SIGN":{let{share:n,walletId:t,userId:s,base64Bytes:o}=r;return E(e,n,s,t,o)}case"ED25519_PREKEYGEN":{let{email:n}=r,{pregenIdentifier:t,pregenIdentifierType:s}=r;return n!=="null"&&n!=="undefined"&&n!==""&&n!=null&&(t=n,s="EMAIL"),U(e,t,s)}default:throw new Error(`functionType: ${i} not supported`)}}async function ee(e){let{env:a,apiKey:i,cosmosPrefix:r="cosmos",offloadMPCComputationURL:n,disableWorkers:t,sessionCookie:s,useDKLS:o,disableWebSockets:l,workId:g}=e.data,c={env:a,apiKey:i,client:_({env:a,version:V,apiKey:i,retrieveSessionCookie:()=>s}),offloadMPCComputationURL:n,mpcComputationClient:n?F.initClient(n,!!t):void 0,useDKLS:o,disableWebSockets:!!l,cosmosPrefix:r};(!c.offloadMPCComputationURL||c.useDKLS)&&await B(c);let u=await Y(c,e.data);return u.workId=g,u}export{ee as handleMessage};
